version: "3"
services:
  app:
    build: .
    ports:
      - "80:80"
      - "88:88"
      - "443:443"
      - "6660:6660"
      - "7003:7003"
      - "8226:8226"
      - "8227:8227"
      - "8228:8228"
      - "43200:43200"
      - "43300:43300"
      - "43400:43400"
      - "53303:43400"
      - "9000:9000"
      - "9001:9001"
      - "9002:9002"
      - "9003:9003"
      - "9004:9004"
      - "9005:9005"
      - "9006:9006"
      - "9007:9007"
      - "9008:9008"
      - "9009:9009"
      - "9010:9010"
      - "9011:9011"
      - "9012:9012"
      - "9013:9013"
      - "9014:9014"
    environment:
      PGHOST: db
      PGUSER: postgres
      PGDATABASE: postgres
      PGPASSWORD: mco
    volumes:
      - ./:/home/node/app
    depends_on:
      - db
      - redis
    command: "npm run prod"

  db:
    image: postgres:11.4
    restart: always
    environment:
      POSTGRES_PASSWORD: mco
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8181:8080

  redis:
    image: redis

  prometheus:
    image: prom/prometheus:v2.11.1
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:6.2.5
    ports:
      - "3000:3000"

  traefik:
    image: traefik:v1.7.12 # The official Traefik docker image
    command: --api --docker # Enables the web UI and tells Traefik to listen to docker
    ports:
      - "81:80" # The HTTP port
      - "8080:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
volumes:
  logvolume01: {}
